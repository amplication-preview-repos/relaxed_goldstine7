/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ResetPassword as PrismaResetPassword } from "@prisma/client";

export class ResetPasswordServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ResetPasswordCountArgs, "select">
  ): Promise<number> {
    return this.prisma.resetPassword.count(args);
  }

  async resetPasswords(
    args: Prisma.ResetPasswordFindManyArgs
  ): Promise<PrismaResetPassword[]> {
    return this.prisma.resetPassword.findMany(args);
  }
  async resetPassword(
    args: Prisma.ResetPasswordFindUniqueArgs
  ): Promise<PrismaResetPassword | null> {
    return this.prisma.resetPassword.findUnique(args);
  }
  async createResetPassword(
    args: Prisma.ResetPasswordCreateArgs
  ): Promise<PrismaResetPassword> {
    return this.prisma.resetPassword.create(args);
  }
  async updateResetPassword(
    args: Prisma.ResetPasswordUpdateArgs
  ): Promise<PrismaResetPassword> {
    return this.prisma.resetPassword.update(args);
  }
  async deleteResetPassword(
    args: Prisma.ResetPasswordDeleteArgs
  ): Promise<PrismaResetPassword> {
    return this.prisma.resetPassword.delete(args);
  }
}
